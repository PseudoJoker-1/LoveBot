import telebot
from telebot import types
import re
import sqlite3
from telebot.types import ReplyKeyboardRemove
import random
from pathlib import Path
import base64
import time


conn = sqlite3.connect('db.db', check_same_thread=False)
cursor = conn.cursor()

API_TOKEN = '6405524079:AAGu7AeTYChxVGm_zsBlzXbUZ8XMTTMksO8'
PAYMENTS_TOKEN = '5420394252:TEST:543267'

bot = telebot.TeleBot(API_TOKEN)


alreadyfindedprofiles = []




def checkRealProfile(userIdent):
    Cursor2 = conn.execute(f"SELECT id FROM Profiles")
    result2 = [row[0] for row in Cursor2.fetchall()]
    for i in result2:
        if str(i) == str(userIdent):
            return True
    return False

def checkProfile(userId):
    Cursor1 = conn.execute(f"SELECT * FROM NewProfiles")
    result1 = Cursor1.fetchall()
    for i in result1:
        if i[0] == userId:
            return True
    return False




def db_table_val(id, Name, Age, Hobby,City,Sex,Image):
    cursor.execute('INSERT INTO NewProfiles (id, Name, Age, Hobby,City,Sex,Image) VALUES (?, ?, ?, ?, ?, ?, ?)', (id, Name, Age, Hobby,City,Sex,Image))
    conn.commit()
def –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Ñ–æ—Ä–º–∞—Ç(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥):

    # –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞
    –∏–º—è_—Ä–µ–≥—É–ª—è—Ä–∫–∞ = re.compile(r"^[–ê-–Ø–∞-—èA-Za-z\s]+$")
    –≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–≥—É–ª—è—Ä–∫–∞ = re.compile(r"^\d+$")
    —Ö–æ–±–±–∏_—Ä–µ–≥—É–ª—è—Ä–∫–∞ = re.compile(r"^[–ê-–Ø–∞-—èA-Za-z\s,]+$")
    –≥–æ—Ä–æ–¥_—Ä–µ–≥—É–ª—è—Ä–∫–∞ = re.compile(r"^[–ê-–Ø–∞-—èA-Za-z\s]+$")
    –ø–æ–ª_—Ä–µ–≥—É–ª—è—Ä–∫–∞ = re.compile(r"^[–ê-–Ø–∞-—èA-Za-z\s]+$")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ñ–æ—Ä–º–∞—Ç—É
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–∏–º—è = –∏–º—è_—Ä–µ–≥—É–ª—è—Ä–∫–∞.match(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥[0].strip())
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–≤–æ–∑—Ä–∞—Å—Ç = –≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–≥—É–ª—è—Ä–∫–∞.match(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥[1].strip())
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_—Ö–æ–±–±–∏ = —Ö–æ–±–±–∏_—Ä–µ–≥—É–ª—è—Ä–∫–∞.match(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥[2].strip())
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–≥–æ—Ä–æ–¥ = –≥–æ—Ä–æ–¥_—Ä–µ–≥—É–ª—è—Ä–∫–∞.match(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥[3].strip())
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–ø–æ–ª = –ø–æ–ª_—Ä–µ–≥—É–ª—è—Ä–∫–∞.match(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π_–≤–≤–æ–¥[4].strip())
    

    return —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–∏–º—è and —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–≤–æ–∑—Ä–∞—Å—Ç and —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_—Ö–æ–±–±–∏ and —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–≥–æ—Ä–æ–¥ and —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç_–ø–æ–ª



#-----–ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê-----#
def is_number(num):
    try:
        int(num)
        return True
    except ValueError:
        return False
@bot.message_handler(commands=['refill'])
def buy(message):
    if checkRealProfile(message.from_user.id):
        isgotpayment = False
        msg1 = bot.send_message(message.chat.id,'–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        bot.register_next_step_handler(message, balance)
    else:
        bot.send_message(message.chat.id,"–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è!")


def balance(message):
    if is_number(message.text):
        global amountrefill
        amountrefill = message.text
        PRICE = types.LabeledPrice(label="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞", amount=int(amountrefill) * 100)
        global paymsg
        paymsg = bot.send_invoice(message.chat.id,
                        title="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞",
                        description=f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É {amountrefill}‚Ç∏. –û–ø–ª–∞—Ç–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç!",
                        provider_token=PAYMENTS_TOKEN,
                        currency="kzt",
                        is_flexible=False,
                        prices=[PRICE],
                        start_parameter="refill-balance",
                        invoice_payload="test-invoice-payload",

                        )
        time.sleep(300)
        if isgotpayment == False:
            bot.delete_message(message.chat.id,paymsg.message_id)
    else:
        bot.send_message(message.chat.id,'–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')
        bot.register_next_step_handler(message, balance)

@bot.pre_checkout_query_handler(func=lambda query: True)
def checkout(pre_checkout_query):
    bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True,
                                  error_message="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")


@bot.message_handler(content_types=['successful_payment'])
def gotpayment(message):
    global isgotpayment 
    isgotpayment = False
    isgotpayment = True
    bot.send_message(message.chat.id,f'‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ {amountrefill}')
    cursor.execute(f'UPDATE Profiles SET balance = ? WHERE id = ?', (amountrefill, message.from_user.id))
    conn.commit()
    bot.delete_message(message.chat.id,paymsg.message_id)


#------–ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê-------#
@bot.message_handler(commands=['mybalance'])
def my_balance(message):
    if checkRealProfile(message.from_user.id):
        request = conn.execute(f'SELECT balance FROM Profiles WHERE id = {message.from_user.id}')
        user_balance = request.fetchone()
        bot.send_message(message.chat.id,'üí∏–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: ' + str(user_balance[0]))

    

#--------–û–°–ù–û–í–ù–û–ô –ë–õ–û–ö---------#
@bot.message_handler(commands=['start'])
def help_message(message):
    if checkRealProfile(message.from_user.id):
        user_id = message.from_user.id
        query = f"SELECT Name FROM Profiles WHERE id = {user_id}"
        UserName1 = conn.execute(query).fetchone()
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn2 = types.KeyboardButton("üîé–ü–æ–∏—Å–∫ –ø–∞—Ä—ã")
        btn3 = types.KeyboardButton('üí∏–ë–∞–ª–∞–Ω—Å')
        btn4 = types.KeyboardButton('üõ†Ô∏è–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
        markup1.add(btn2,btn3,btn4)
        
        bot.send_message(message.chat.id,"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ," + UserName1[0] + "üòä\n\n"
                                      "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞! –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä, –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—É–Ω–∫—Ç–∞. –£–¥–∞—á–∏ –≤ –æ–±—â–µ–Ω–∏–∏!",reply_markup=markup1)
        bot.register_next_step_handler(message, searchForPair)
        
    elif checkProfile(message.from_user.id):
        id = message.from_user.id
        if checkDenialReason(id):
            bot.send_message(message.chat.id,"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ—Ç–∫–∞–∑–∞–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º! –ü—Ä–∏—á–∏–Ω–∞: " + reason)
            cursor.execute(f'DELETE FROM NewProfiles WHERE id = {id}')
            conn.commit()
        else:
            bot.send_message(message.chat.id, "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –æ–∂–∏–¥–∞–π—Ç–µ!",reply_markup=ReplyKeyboardRemove())
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
        markup.add(btn1)
        bot.send_message(message.chat.id, """\
–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –¥–ª—è –æ–±—â–µ–Ω–∏—è. üòä

–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—åüó£Ô∏è

–ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –∑–¥–µ—Å—å –≥–ª–∞–≤–Ω–æ–µ ‚Äî —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –æ–±—â–µ–Ω–∏—è! üåü –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "–ü–æ–º–æ—â—å". –£–¥–∞—á–∏ –≤ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞—Ö! üöÄ
\
""", reply_markup=markup)
        bot.register_next_step_handler(message,stats_message)


def stats_message(message):
    if message.text == "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å":
        if checkProfile(message.from_user.id):      
            if checkDenialReason(message.from_user.id):
                bot.send_message("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ—Ç–∫–∞–∑–∞–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º! –ü—Ä–∏—á–∏–Ω–∞: " + reason)
                cursor.execute(f'DELETE FROM NewProfiles WHERE id = {message.from_user.id}')
                conn.commit()
            else:
                bot.send_message(message.chat.id,"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –æ–∂–∏–¥–∞–π—Ç–µ!")
        elif checkRealProfile(message.from_user.id):
            bot.send_message(message.chat.id,"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å!")
        else: 
            bot.send_message(message.chat.id, """\
        –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. üåü

–ù–∞–ø–∏—à–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –∏ —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –æ —Å–µ–±–µ. –ú–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Ö–æ–±–±–∏, –ª—é–±–∏–º—ã–º–∏ —Ñ–∏–ª—å–º–∞–º–∏ –∏–ª–∏ –º—É–∑—ã–∫–æ–π. –¢–∞–∫–∂–µ, —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, —á—Ç–æ–±—ã –±—ã–ª–æ –ª–µ–≥—á–µ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤.

    –ü—Ä–∏–º–µ—Ä:
    üìå –ò–º—è: –ê–Ω–Ω–∞
    üë§ –í–æ–∑—Ä–∞—Å—Ç: 25
    üéØ –•–æ–±–±–∏: –õ—é–±–ª—é —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç—å –≤–∫—É—Å–Ω—É—é –µ–¥—É. –û–±–æ–∂–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å!
    üåá –ì–æ—Ä–æ–¥: –ê—Å—Ç–∞–Ω–∞
     ‚ôÇÔ∏è –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π                        

–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –±—ã—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º! –ß–µ–º –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–µ–º –ª–µ–≥—á–µ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤. –ì–æ—Ç–æ–≤–æ? –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏ –º—ã –Ω–∞—á–Ω–µ–º –ø–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ–±—è. üöÄ\
""", reply_markup=ReplyKeyboardRemove())
            bot.register_next_step_handler(message, handle_profile_data)

@bot.message_handler(content_types='text')
def searchForPair(message):
    if message.text == "üîé–ü–æ–∏—Å–∫ –ø–∞—Ä—ã":
        if checkRealProfile(message.from_user.id):
            user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–∏—Å–∫ –ø–∞—Ä—ã
            user_profile = get_user_profile(user_id)
        
            if user_profile:
            # –ù–∞–π–¥–µ–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                pair_profile = find_matching_pair(user_profile)
            
                if pair_profile:
                # –ù–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É
                    send_pair_info_with_buttons(message.chat.id,user_profile,pair_profile)
        else:
            bot.send_message(message.chat.id,'–í—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ª–∏–±–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!')
    elif message.text == "üí∏–ë–∞–ª–∞–Ω—Å":
        if checkRealProfile(message.from_user.id):
            user_profile = get_user_profile(message.from_user.id)
            if user_profile[7] < 500:
                bot.send_message(message.chat.id,f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {user_profile[7]} KZT')
            elif user_profile[7] > 500:
                inlinekeyboard = types.InlineKeyboardMarkup(row_width=1)
                button1 = types.InlineKeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏", callback_data='withdraw_money')
                inlinekeyboard.add(button1)
                bot.send_message(message.chat.id,f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {user_profile[7]} KZT',reply_markup=inlinekeyboard)
        else:
            bot.send_message(message.chat.id,'–í—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ª–∏–±–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!')
    elif message.text == 'üõ†Ô∏è–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞':
        bot.send_message(message.chat.id,'–î–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É - @LoveSupportingBot')



def get_user_profile(user_id):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ id
    Cursor123 = conn.execute('SELECT * FROM Profiles')
    for profile in Cursor123:
        if profile[0] == user_id:
            return profile
    return None

def find_matching_pair(user_profile):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –ø–∞—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö, –≤–æ–∑—Ä–∞—Å—Ç–µ –∏ —Ç. –¥.
    # –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    database = conn.execute("SELECT * FROM Profiles")
    try:
        other_profiles = [profile for profile in database if profile[0] != user_profile[0] and profile[5] != user_profile[5] and profile[4] == user_profile[4] and profile[0] not in alreadyfindedprofiles]
        return random.choice(other_profiles)
    except:
        return None
    

def send_pair_info_with_buttons(chat_id, user_profile, pair_profile):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–µ –∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    inlinekeyboard = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton(text="‚û°Ô∏è–ù–∞–π—Ç–∏ —Å–ª–µ–¥—É—é—â—É—é –ø–∞—Ä—É", callback_data='find_next_pair')
    button2 = types.InlineKeyboardButton(text="‚ù§Ô∏è", callback_data='like')
    button3 = types.InlineKeyboardButton(text="üí≥–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –¥–µ–Ω–µ–≥", callback_data='send_money')
    inlinekeyboard.add(button1, button2,button3)


    message = '\n–ò–º—è: ' +  pair_profile[1] + '\n–í–æ–∑—Ä–∞—Å—Ç: ' + str(pair_profile[2]) + '\n–•–æ–±–±–∏: ' + pair_profile[3] + '\n–ì–æ—Ä–æ–¥: ' + pair_profile[4] + '\n–ü–æ–ª: ' + pair_profile[5]
    i = bot.send_photo(chat_id,photo=base64.b64decode(pair_profile[6]),caption=message,reply_markup=inlinekeyboard )
    global idmessage
    idmessage = i.message_id
    alreadyfindedprofiles.append(pair_profile[0])
    print(pair_profile[0])


@bot.callback_query_handler(func=lambda call: True)
def handle_button_click(callback):
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    username = callback.from_user.username
    global profil
    global user_profile
    user_profile = get_user_profile(user_id)
    if callback.data == 'find_next_pair':  
        bot.delete_message(chat_id,idmessage)       
        if user_profile:
            # –ù–∞–π–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            pair_profile = find_matching_pair(user_profile)
            
            if pair_profile and pair_profile[0] not in alreadyfindedprofiles:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–π –ø–∞—Ä–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
                send_pair_info_with_buttons(chat_id, user_profile, pair_profile)
            else:
                # –ü–æ–¥—Ö–æ–¥—è—â–∞—è –ø–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
                bot.send_message(chat_id,"–ü–æ–¥—Ö–æ–¥—è—â–∞—è –ø–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        else:
            # –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            bot.send_message(chat_id,'–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω!')

    elif callback.data == 'like':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–õ–∞–π–∫"
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ—Å—Ç–∞–ª—Å—è –ª–∞–π–∫fd
        inlinekeyboard123 = types.InlineKeyboardMarkup(row_width=1)
        button123 = types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data='review_profile')
        button234 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", url=f't.me/{username}')
        inlinekeyboard123.add(button123, button234)
        message = bot.send_message(alreadyfindedprofiles[-1], '–í–∞—Å –ª–∞–π–∫–Ω—É–ª(–∞) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å?',reply_markup=inlinekeyboard123)
        global msg
        msg = message.message_id
    if callback.data == 'review_profile':
        bot.delete_message(alreadyfindedprofiles[-1],msg)
        user_profile_id = alreadyfindedprofiles[-1]  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ª–∞–π–∫–Ω—É–ª
        user_profile = get_user_profile(user_profile_id)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    
        if user_profile:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            inlinekeyboard1234 = types.InlineKeyboardMarkup(row_width=1)
            button1234 = types.InlineKeyboardButton(text="ü§∑–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data='ignore')
            button12345 = types.InlineKeyboardButton(text="üó®Ô∏è–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", url=f't.me/{username}')
            inlinekeyboard1234.add(button1234,button12345)
            profile_info = f"–ò–º—è: {user_profile[1]}\n–í–æ–∑—Ä–∞—Å—Ç: {user_profile[2]}\n–•–æ–±–±–∏: {user_profile[3]}\n–ì–æ—Ä–æ–¥: {user_profile[4]}\n–ü–æ–ª: {user_profile[5]}"
            profil = bot.send_photo(alreadyfindedprofiles[-1], base64.b64decode(user_profile[6]), profile_info,reply_markup=inlinekeyboard1234)
    if callback.data == 'ignore':

        bot.delete_message(chat_id,profil.message_id)
    if callback.data == 'send_money':
        bot.send_message(chat_id,'üí≥–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: ')
        bot.register_next_step_handler(callback.message,sendmoney)
        global pair_id
        global sendedmoney_user_profile
        sendedmoney_user_profile = get_user_profile(alreadyfindedprofiles[-1])
        pair_id = alreadyfindedprofiles[-1]
    if callback.data == 'withdraw_money':
        global WithdrawMethod
        bot.send_message(chat_id,'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏')
        bot.register_next_step_handler(callback.message,withdraw_money)
    if callback.data == 'Qiwi':
        WithdrawMethod = 'Qiwi'
        bot.send_message(chat_id,'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ë–ï–ó –ü–†–û–ë–ï–õ–û–í')
        bot.register_next_step_handler(callback.message,withdraw_process)
    if callback.data == 'BankCard':
        WithdrawMethod = 'BankCard'
        bot.send_message(chat_id,'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ë–ï–ó –ü–†–û–ë–ï–õ–û–í')
        bot.register_next_step_handler(callback.message,withdraw_process)
        
def withdraw_money(message):
    if is_number(message.text):
        global withdraw_amount
        withdraw_amount = message.text
        request = cursor.execute(f'SELECT balance FROM Profiles WHERE id = {message.chat.id}')
        checkBalance = request.fetchone()
        if int(message.text) == int(checkBalance[0]) or int(message.text) < int(checkBalance[0]):
            inlinekeyboard123 = types.InlineKeyboardMarkup(row_width=1)
            button123 = types.InlineKeyboardButton(text="Qiwi", callback_data='Qiwi')
            button234 = types.InlineKeyboardButton(text="Bank Cards", callback_data='BankCard')
            inlinekeyboard123.add(button123, button234)
            bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –∫—É–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏",reply_markup=inlinekeyboard123)
        else:
            bot.send_message(message.chat.id,'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ!')
    else:
        bot.send_message(message.chat.id,'–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message,withdraw_money)

def withdraw_process(message):
    if is_number(message.text):
        if len(message.text) == 1:
            bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã")
            bot.register_next_step_handler(message.chat.id,withdraw_money)
        else:
            cursor.execute('INSERT INTO WithdrawRequests (userid, WithdrawAmount, Requisites, WithdrawMethod) VALUES (?, ?, ?, ?)', (message.from_user.id,withdraw_amount,message.text,WithdrawMethod))
            conn.commit()
            bot.send_message(message.chat.id,'–í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ –æ–∂–∏–¥–∞–π—Ç–µ!')
    else:
        bot.send_message(message.chat.id,'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö')
        bot.register_next_step_handler(message,withdraw_process)



def sendmoney(message):
    if is_number(message.text):
        anotherquery = f'SELECT balance FROM Profiles WHERE id = {message.from_user.id}'
        userbalance = conn.execute(anotherquery)
        result = userbalance.fetchone()
        if result[0] < int(message.text):
            bot.send_message(message.chat.id,'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ')
        else:
            result2 = result[0] - int(message.text)
            cursor.execute(f'UPDATE Profiles SET balance = ? WHERE id = ?',(message.text,pair_id))
            conn.commit()
            cursor.execute(f'UPDATE Profiles SET balance = ? WHERE id = ?',(result2,message.from_user.id))
            conn.commit()
            bot.send_message(message.chat.id,f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ {sendedmoney_user_profile[1]} {message.text} KZT!')
            bot.send_message(alreadyfindedprofiles[-1],f'–í–∞–º –ø–µ—Ä–µ–≤–µ–ª–∏ {message.text} KZT –æ—Ç {user_profile[1]}')
    else:
        bot.send_message(message.chat.id,"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑")
        bot.register_next_step_handler(message,sendmoney)


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    if canSendPhoto == True:
        bot.send_message(message.chat.id,'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –æ–∂–∏–¥–∞–π—Ç–µ!')
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        file_path = file_info.file_path
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        downloaded_file = bot.download_file(file_path)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
        with open("user_photo.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)
    

        photo_base64 = base64.b64encode(downloaded_file).decode('utf-8')

    # –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é handle_profile_data,
    # –ø–µ—Ä–µ–¥–∞–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ message, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
        avatar(photo_base64)
   
def handle_profile_data(message):
    try:
        –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è = [x.strip() for x in message.text.split(',')]
        if len(–¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è) != 5:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
        –∏–º—è = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[0]
        –≤–æ–∑—Ä–∞—Å—Ç = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[1]
        —Ö–æ–±–±–∏ = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[2]
        –≥–æ—Ä–æ–¥ = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[3]
        –ø–æ–ª = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[4]
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.")
        bot.register_next_step_handler(message, handle_profile_data)
        return

   
    if not –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Ñ–æ—Ä–º–∞—Ç(–¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è):
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.")
        bot.register_next_step_handler(message, handle_profile_data)
        return

    global us_id
    global us_name
    global age
    global hobby
    global city
    global sex
    us_id = message.from_user.id  
    us_name = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[0]  
    age = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[1]
    hobby = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[2]
    city = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[3]
    sex = –¥–∞–Ω–Ω—ã–µ_–ø—Ä–æ—Ñ–∏–ª—è[4]
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ: ",reply_markup=ReplyKeyboardRemove())
    global canSendPhoto
    canSendPhoto = True
    has_Profile = True

def avatar(img):
    db_table_val(id=us_id, Name=us_name, Age=age, Hobby=hobby,City=city, Sex=sex,Image=img)

def checkDenialReason(UserID):
    query = 'SELECT * FROM NewProfiles'
    Cursor = conn.execute(query)
    result = Cursor.fetchall()
    print(result[0])

    for i in result:
        if i[0] == UserID and i[5] != None:
            print("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ—Ç–∫–∞–∑–∞–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º! –ü—Ä–∏—á–∏–Ω–∞: " + i[5])
            global reason
            reason = i[5]
            return i[5]
    return False




bot.polling(none_stop=True)